buildscript {
	ext {
		springBootVersion = '2.1.2.RELEASE'
		junit_version = '5.2.0'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath group: 'org.junit.platform', name: 'junit-platform-gradle-plugin', version: '1.0.2'
	}
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.junit.platform.gradle.plugin'
apply plugin: 'jacoco'

group = 'org.gurutt'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation group: 'io.vavr', name: 'vavr', version: '0.9.0'
	implementation 'org.telegram:telegrambots:4.1.2'
	implementation 'org.apache.commons:commons-lang3:3.4'
	compileOnly 'org.projectlombok:lombok:1.16.12'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.mockito:mockito-core:2.21.0'
	testImplementation 'org.mockito:mockito-junit-jupiter:2.21.0'
	testImplementation 'org.junit.jupiter:junit-jupiter-api:' + junit_version
	testImplementation 'org.junit.jupiter:junit-jupiter-engine:' + junit_version
}

jacoco {
	toolVersion = '0.7.9'
	applyTo junitPlatformTest
}

jacocoTestReport {
	afterEvaluate {
		classDirectories = files(classDirectories.files.collect {
			fileTree(dir: it, exclude: ['org/gurutt/drafter/domain/**','**/DbInitializer*', '**/BotInit*', '**/DrafterApplication**'])
		})
	}
}

junitPlatformTest {
	jacoco {
		destinationFile = file("${buildDir}/jacoco/test.exec")
	}
}

jacocoTestReport {
	reports {
		xml.enabled true
		html.enabled true
	}
}

check.dependsOn jacocoTestReport
